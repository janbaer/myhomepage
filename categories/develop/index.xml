<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>develop on Homepage Jan Baer</title>
    <link>https://www.janbaer.de/categories/develop/</link>
    <description>Recent content in develop on Homepage Jan Baer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Oct 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.janbaer.de/categories/develop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Find out which process uses my port</title>
      <link>https://www.janbaer.de/posts/2013-12-08-find-out-which-process-uses-my-port/</link>
      <pubDate>Sun, 08 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.janbaer.de/posts/2013-12-08-find-out-which-process-uses-my-port/</guid>
      <description>Today I had the problem, that someone has used the port 3000 on my macbook and I couldn&amp;rsquo;t start my node.js server. At first I tried to close all open terminal windows and exit the terminal app, but this wasn&amp;rsquo;t the solution for my problem.
Now I&amp;rsquo;ve tried to find out wich process uses the port. For that I entered the following command in the terminal:
lsof -i :3000 This command returns me informations about the process that is using my port.</description>
    </item>
    
    <item>
      <title>Using hooks in git</title>
      <link>https://www.janbaer.de/posts/2013-09-01-using-hooks-in-git/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.janbaer.de/posts/2013-09-01-using-hooks-in-git/</guid>
      <description>Wenn man nach &amp;ldquo;git hooks&amp;rdquo; sucht, findet man jede Menge Links zu guten Beschreibungen, was es für verschiedene Hooks in Git gibt und was man alles damit machen kann.
Deshalb möchte ich mich in diesem Artikel darauf beschränken, zu beschreiben, wie ich den post-commit hook in einem meiner Projekte verwende.
Ich habe für mich mit MarkDocein kleines Wiki erstellt das ich über die Github-Websites über wiki.janbaer.de erreiche. Dieses Wiki wird mit einfachen Textdateien im Markdown Format erstellt und über ein Python Script in HTML umgewandelt.</description>
    </item>
    
    <item>
      <title>Set-acl with Powershell</title>
      <link>https://www.janbaer.de/posts/2013-04-01-set-acl-with-powershell/</link>
      <pubDate>Mon, 01 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.janbaer.de/posts/2013-04-01-set-acl-with-powershell/</guid>
      <description>In meinem letzten Projekt war eine meiner Aufgaben, ein Script zu erstellen, das eine definierte Verzeichnisstruktur erstellt und einem bestimmten User die notwendigen Zugriffrechte darauf gibt. Weiterhin sollte das Script dann im IIS eine Website mit einem eigenen AppPool in diesem Verzeichnis erstellen.
Ich hatte mich entschieden, das Script mit Powershell zu erstellen, da es hier schon fertige Module von Microsoft gibt, um den IIS zu verwalten, ohne das man dies über WMI machen müsste.</description>
    </item>
    
    <item>
      <title>LinqPerformanceTips</title>
      <link>https://www.janbaer.de/posts/2013-03-04-linqperformancetips/</link>
      <pubDate>Mon, 04 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.janbaer.de/posts/2013-03-04-linqperformancetips/</guid>
      <description>In my latest project I learned some thinks about the performance of Linq when you often query in-memory repositories. Linq is very easy to use and with that you can very quick implement the methods that you need for an repository. But sometimes it&amp;rsquo;s useful to think a little bit more how often a method will be called. In my latest project I had the situation to call the GetById method for more than 20.</description>
    </item>
    
    <item>
      <title>Csv to Json with Powershell</title>
      <link>https://www.janbaer.de/posts/2013-02-26-csvtojsonwithpowershell/</link>
      <pubDate>Tue, 26 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.janbaer.de/posts/2013-02-26-csvtojsonwithpowershell/</guid>
      <description>In my current project I have got some .csf files with the requirement to import these files to my project as base data to use it as inmemory repository.
The best solution was these single line of code in powershell.
Get-Content -path $inputFile | ConvertFrom-Csv -Delimiter &#39;;&#39; | ConvertTo-Json | Out-File $outputFile You can download the complete powershell script from my gist repository at github.</description>
    </item>
    
  </channel>
</rss>