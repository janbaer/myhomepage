<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Homepage Jan Baer</title>
  
  <subtitle>My personal homepage and blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.janbaer.de/"/>
  <updated>2018-12-23T07:50:36.125Z</updated>
  <id>https://www.janbaer.de/</id>
  
  <author>
    <name>Jan Baer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MDWiki rewrite</title>
    <link href="https://www.janbaer.de/2018/12/22/2018-12-22-mdwiki_rewrite/"/>
    <id>https://www.janbaer.de/2018/12/22/2018-12-22-mdwiki_rewrite/</id>
    <published>2018-12-21T23:00:00.000Z</published>
    <updated>2018-12-23T07:50:36.125Z</updated>
    
    <content type="html"><![CDATA[<p>As I wrote in my previous blog entry before a while I decided to give up the domains for my personal projects and let it run as subdomains under my personal domain janbaer.de.</p><p>Before a while I realized, how easy it is to host a PWA on Github as a <strong>gh-page</strong> and thanks to Github and with the help of <strong>Let’s encrypt</strong> your PWA can also run over HTTPs which gives you more security but also the ability to use ServiceWorkers. The only constraint you have to live with is, that you’ll have no serve backend to use Node.js for example. So there’ll be also no server side rendering.</p><p>But that was fine for my projects and that’s why I decided to rewrite MDWiki completely for the  third time. In the first version I was using Angular 1 with Node.js on the backend site. After 3 years I wanted to rewrite it and I decided to use Next.js wich is using React.js and Node.js in the backend.</p><p>So for the third version I decided to not make a complete rewrite and just to make some slightly changes to be able to use some code from the second version. That’s why I don’t wanted to leave the React.js world completely. But I wanted to replace it with <a href="https://preactjs.com/" target="_blank" rel="noopener">Preact.js</a> which has a much smaller footprint than React.js. And because of there’s no server side code, I completely dropped Next.js.</p><p>But instead of using Webpack directly for the module bundling I decided to use <a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel.js</a> which is another more lighweight module bundler.</p><p>An because of my experience of the second version of MDWiki and also my daily work with React.js it took me less than two months to rewrite MDWiki with the same functionality as from the second version and let it run under <a href="https://mdwiki.janbaer.de" target="_blank" rel="noopener">mdwiki.janbaer.de</a>. When I started with the project I wanted to use a small CSS framework and I started with <a href="https://getuikit.com/docs/introduction" target="_blank" rel="noopener">UIKit</a>. But then I realized that I don’t used so much from the framework and I could write it on my own.</p><p>Another feature I also used, is a ServiceWorker, to be able to also be runnable offline. ServiceWorker you can only use when your website is served via https.</p><p>The result is now a very lightweight and very easy deployable PWA, that has just a few dependencies.</p>]]></content>
    
    <summary type="html">
    
      A short article about the rewrite of MDWiki
    
    </summary>
    
    
      <category term="develop" scheme="https://www.janbaer.de/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>Reject domains for personal projects</title>
    <link href="https://www.janbaer.de/2018/10/07/2017-10-07_reject_domains/"/>
    <id>https://www.janbaer.de/2018/10/07/2017-10-07_reject_domains/</id>
    <published>2018-10-06T22:00:00.000Z</published>
    <updated>2018-10-07T10:21:54.296Z</updated>
    
    <content type="html"><![CDATA[<p>Because of personal reasons I had to reject to both domain names I used for my personal projects<br><strong>mdwiki.net</strong> and <strong>howcani.eu</strong>. So from November this years, will no longer be reachable.</p><p>But I’ll continue with the hosting for both projects as subdomains for the domain I use for my self since many years. So MDWiki will be reachable under <a href="https://mdwiki.janbaer.de" target="_blank" rel="noopener">mdwiki.janbaer.de</a> and HowCanI will be hosted<br>under <a href="https://howcani.janbaer.de" target="_blank" rel="noopener">howcani.janbaer.de</a>.</p><p>I’ll continue both projects as my personal projects, since I used it for myself for some years. But<br>it’s still possible, to connect to your own GitHub repository.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Because of personal reasons I had to reject to both domain names I used for my personal projects&lt;br&gt;&lt;strong&gt;mdwiki.net&lt;/strong&gt; and &lt;stro
      
    
    </summary>
    
      <category term="software" scheme="https://www.janbaer.de/categories/software/"/>
    
    
  </entry>
  
  <entry>
    <title>My Projects</title>
    <link href="https://www.janbaer.de/2017/04/01/2017-04-01-my-projects/"/>
    <id>https://www.janbaer.de/2017/04/01/2017-04-01-my-projects/</id>
    <published>2017-04-01T15:30:29.000Z</published>
    <updated>2017-04-01T15:31:49.562Z</updated>
    
    <content type="html"><![CDATA[<p>I just wrote an article about my projects, but as a separate page and not as a normal blog post. You<br>can read it <a href="/projects.html">here</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I just wrote an article about my projects, but as a separate page and not as a normal blog post. You&lt;br&gt;can read it &lt;a href=&quot;/projects.ht
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How can I protect my external USB stick with a password on MacOS Sierra</title>
    <link href="https://www.janbaer.de/2016/11/05/2016-11-05_howto_protect_usbstick_with_password_on_macos/"/>
    <id>https://www.janbaer.de/2016/11/05/2016-11-05_howto_protect_usbstick_with_password_on_macos/</id>
    <published>2016-11-04T23:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>To protect your USB-stick with a password you have to format it first with the Disk Utility program to the Mac OS Extended (Journaled) format with the GUI-Partitiontable.</p><p><strong>Attention</strong> Please make a backup before you’re formatting it!!!</p><p>Then just go into the terminal and enter <strong>diskutil list</strong>. Here should see the USB drive listed (in my case it’s /dev/disk2)</p><p>In case you’ve only one partition on this USB stick you’ve to convert <strong>disk2s2</strong> to a AppleCoreStorage with using you own passphrase. You can do this with the following command.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">diskutil </span>cs convert <span class="keyword">disk2s2 </span>-passphrase yoursupersecurepassphrase</span><br></pre></td></tr></table></figure><p>After some minutes the USB stick should be remounted and it’s protect with the passphrase of your choice. When you want you can save the passphrase in your local keychain so that you don’t have to enter it always again.</p><p>But in case that someone will “find” your USB-stick, he’ll have no access to the data that are stored on it without knowing the passphrase.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;To protect your USB-stick with a password you have to format it first with the Disk Utility program to the Mac OS Extended (Journaled) fo
      
    
    </summary>
    
      <category term="software" scheme="https://www.janbaer.de/categories/software/"/>
    
    
      <category term="MacOS" scheme="https://www.janbaer.de/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>How to run a scheduled job within a Docker container</title>
    <link href="https://www.janbaer.de/2016/10/23/2016-10-23_howto_run_a_sheduled_job_within_a_docker_container/"/>
    <id>https://www.janbaer.de/2016/10/23/2016-10-23_howto_run_a_sheduled_job_within_a_docker_container/</id>
    <published>2016-10-22T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>For some reasons it could be necessary to execute a job in scheduled time.<br>When running the job within a Docker container there’re two ways to do this.</p><p>The first would be to create a cron job on the server on which Docker is<br>running and let them execute the job with <code>docker run</code>.</p><p>The second way would be to let do everything within the Docker container.<br>But you don’t need to implement any scheduling functionality since it’s out of<br>the box available from any Linux based container.</p><p>For example when your container is using the tiny Alpine base image you can use<br><strong>crond</strong> for it. The following code snippets are showing you everything what<br>is todo.</p><h3 id="run-sh"><a href="#run-sh" class="headerlink" title="run.sh"></a>run.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">NOW=$(date +<span class="string">"%T"</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Hello from the job at <span class="variable">$&#123;NOW&#125;</span> in <span class="variable">$(pwd)</span>"</span> &gt;&gt; /dev/stdout</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine:latest</span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./job.sh /etc/periodic/15min/job</span></span><br><span class="line"><span class="bash">RUN chmod +x /etc/periodic/15min/job</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">CMD [<span class="string">"crond"</span>, <span class="string">"-fS"</span>]</span></span><br></pre></td></tr></table></figure><p>The dockerfile is doing two things. It’s copying the <strong>job.sh</strong> into a<br>predefined folder and mark them as executable.</p><p>All scripts that are within this folder will be executed by<br><strong>crond</strong> every 15 minutes. There’re more predefined folders under<br><strong>etc/periodic</strong> to let run a job hourly, daily, weekly or once per month.<br>In case you need more flexibility you’ve to change the crontabs file for the<br><strong>root</strong> user manually.</p><p>The program <strong>crond</strong> comes with the tiny Alpine image but it will not be<br>executed automatically as a background daemon.</p><p>It’s possible to let run <strong>crond</strong> as a foreground process, which is intersting<br>for us. Since we need a process wich is running always, otherwise our Docker<br>container will be finished immdiately after it was started. So with giving<br><strong>dockerd</strong> the <strong>-f</strong> flag as argument it will run constantly as a foreground<br>process and our Docker container will also running continuously.</p><p>Please keep in mind that it’s required that the script in the targetfolder<br>don’t have the .sh extension, otherwise <strong>run-parts</strong> which is used from<br><strong>crond</strong>, will not use your script.</p><p>Please keep also in mind that the workingdirectory where the <strong>job.sh</strong> will be<br>executed is the <strong>/root</strong> folder. So maybe you’ve to change<br>the working directory in the <strong>job.sh</strong> at first before executing whatever<br>you’ve to execute…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;For some reasons it could be necessary to execute a job in scheduled time.&lt;br&gt;When running the job within a Docker container there’re two
      
    
    </summary>
    
      <category term="software" scheme="https://www.janbaer.de/categories/software/"/>
    
    
      <category term="Docker" scheme="https://www.janbaer.de/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>From C# to Python</title>
    <link href="https://www.janbaer.de/2015/10/17/2015-10-17-From-Csharp-to-Python/"/>
    <id>https://www.janbaer.de/2015/10/17/2015-10-17-From-Csharp-to-Python/</id>
    <published>2015-10-16T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>Last week I did my first steps with <a href="https://de.wikipedia.org/wiki/Python_(Programmiersprache" target="_blank" rel="noopener">Python</a>) and I was really suprised about this programming language that has such a long history.</p><p>It provides features that I wouldn’t expect. To dive deeper into the language I solved a <strong>Kata</strong>,<br>what I mostly do when learning a new programming language. This time I choosen the <a href="http://osherove.com/tdd-kata-1/" target="_blank" rel="noopener">StringCalculator kata</a> from Roy Osherove. You can find the source code on my <a href="https://github.com/janbaer/Katas/tree/master/Kata.StringCalculator.Python" target="_blank" rel="noopener">github</a> page.</p><p>One of the nice features I found was <strong>list comprehensions</strong> feature.</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[number for number in [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1000</span>, <span class="number">1001</span>] if number &lt;= <span class="number">1000</span>]</span><br><span class="line"># returns [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1000</span>]</span><br></pre></td></tr></table></figure><p>Another nice feature was the built-in <strong>any</strong> function. It does the same like the same linq function from C#. It returns true when any element of the iterable returns true.</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">any</span>(<span class="built_in">number</span> &lt; <span class="number">0</span> <span class="keyword">for</span> <span class="built_in">number</span> <span class="keyword">in</span> [<span class="number">-1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"><span class="comment"># returns true</span></span><br></pre></td></tr></table></figure><p>The same is for the <strong>filter</strong> function. It takes a function as first parameter that returns a boolean and returns all elements from the given list whith those elements for which the function returns true.</p><p>At least I used a feature that ES6 also provides, the <strong>Destructuring assignment</strong>. So in the Kata I used a regular expression to split the definition of delimiter from the list of numbers.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">match</span> = myRegex.<span class="built_in">search</span>(<span class="built_in">input</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">  delimiter, <span class="built_in">input</span> = <span class="keyword">match</span>.groups()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> delimiter, <span class="built_in">input</span></span><br></pre></td></tr></table></figure><p>The regex returned in a positive case two groups. Both groups I could directly assign to the variables <em>delimiter</em> and <em>input</em> and also return this variables as result of the function. In this case both variables will be automatically packed as a tuple and in the calling function unpacked and assigned to two another variables, very nice…</p><p>So I’m just at the beginning of journey through the features of python and I’ll post here more about my experiences…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Last week I did my first steps with &lt;a href=&quot;https://de.wikipedia.org/wiki/Python_(Programmiersprache&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pyt
      
    
    </summary>
    
      <category term="development" scheme="https://www.janbaer.de/categories/development/"/>
    
    
      <category term="linq" scheme="https://www.janbaer.de/tags/linq/"/>
    
      <category term="c#" scheme="https://www.janbaer.de/tags/c/"/>
    
      <category term="python" scheme="https://www.janbaer.de/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Quicktip - Move windows between desktops on MacOSX</title>
    <link href="https://www.janbaer.de/2015/10/17/2015-10-17_QuickTip_MoveWindowsBetweetenDesktopsOnMacOSX/"/>
    <id>https://www.janbaer.de/2015/10/17/2015-10-17_QuickTip_MoveWindowsBetweetenDesktopsOnMacOSX/</id>
    <published>2015-10-16T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>To move windows, click and hold on any window titlebar and hit the shortcut you defined for the desktop (in my case it’s command+1,2,3) and the window will automatically moved to this dekstop.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;To move windows, click and hold on any window titlebar and hit the shortcut you defined for the desktop (in my case it’s command+1,2,3) a
      
    
    </summary>
    
      <category term="software" scheme="https://www.janbaer.de/categories/software/"/>
    
    
      <category term="MacOSX" scheme="https://www.janbaer.de/tags/MacOSX/"/>
    
  </entry>
  
  <entry>
    <title>Find out which process uses my port</title>
    <link href="https://www.janbaer.de/2013/12/08/2013-12-08-find-out-which-process-uses-my-port/"/>
    <id>https://www.janbaer.de/2013/12/08/2013-12-08-find-out-which-process-uses-my-port/</id>
    <published>2013-12-07T23:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>Today I had the problem, that someone has used the port 3000 on my macbook and I couldn’t start my node.js server.<br>At first I tried to close all open terminal windows and exit the terminal app, but this wasn’t the solution for my problem.</p><p>Now I’ve tried to find out wich process uses the port. For that I entered the following command in the terminal:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -<span class="selector-tag">i</span> :<span class="number">3000</span></span><br></pre></td></tr></table></figure><p>This command returns me informations about the process that is using my port. With the processid I’m now be able to kill the process.</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill <span class="number">-9</span> <span class="number">11381</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Today I had the problem, that someone has used the port 3000 on my macbook and I couldn’t start my node.js server.&lt;br&gt;At first I tried to
      
    
    </summary>
    
      <category term="develop" scheme="https://www.janbaer.de/categories/develop/"/>
    
    
      <category term="node.js" scheme="https://www.janbaer.de/tags/node-js/"/>
    
      <category term="system" scheme="https://www.janbaer.de/tags/system/"/>
    
      <category term="macos" scheme="https://www.janbaer.de/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>Reisebericht Dubai</title>
    <link href="https://www.janbaer.de/2013/10/27/2013-10-27-reisebericht-dubai/"/>
    <id>https://www.janbaer.de/2013/10/27/2013-10-27-reisebericht-dubai/</id>
    <published>2013-10-26T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>Gleich im Anschluss an unseren Urlaub in Indien machten wir einen Zwischenstop in Dubai, um auch diese Stadt kennenzulernen. Und was soll ich sagen, wo Dubai aufgrund der vielen positiven Eindrücke einfach ein Traum war, war Indien manchmal eher ein Albtraum für uns.</p><p>Dubai ist eine Stadt, die mit vielen Superlativen glänzen kann. Wir haben zwei geführte Touren mitgemacht und unsere Tourguides haben wirklich sehr oft die Worte “Das höchste”, “Das größte”, “Das beste” usw. gebraucht. Was hier vor allem im neuen Jahrtausend entstanden ist, sucht wirklich seinesgleichen.</p><p>Erst als die Engländer gingen und das Öl kam, blühte Dubai und die anderen Städte wie Abu Dhabi auf, und wurde zu dem was es heute ist. Vom ehemaligen Dubai kann man sich heute nur noch im wirklich sehr interessanten und gut gemachten Museum einen Eindruck machen. Im Gegensatz zu Indien, wo es in vielen Regionen noch wie vor hundert Jahren zugeht, sowohl was den Glauben als auch die Lebensumstände angeht. Dubai verlässt sich aber nicht nur auf sein Öl, denn davon hat es eh nicht mehr all zuviel. Deshalb hat Dubai in vielen anderen Industriezweigen deutlich ausgebaut und für die Zukunft vorgesorgt, so dass das Öl nur noch 10 % des Einkommens des Emirats ausmacht.</p><p>Dubai machte auf uns nicht den Eindruck einer in Glaubensfragen rückständigen Religion. Die, aus islamischer Sicht, freizügig und unzüchtig bekleideten Frauen waren allerorts zu sehen und scheinen niemanden zu stören.</p><p>Überhaupt haben wir über Dubai Dinge erfahren, die man sich eigentlich gar nicht vorstellen kann. So bekommt in Dubai z.B. jedes einheimische Paar vom Staat ein Haus geschenkt und zur Hochzeit noch Geld obendrein. Strom und Wasser sind kostenlos, genauso wie die medizinische Versorgung und das Studium an der eigenen Universität. Wohlgemerkt gilt das nur für den sehr geringen Teil an einheimischen Paaren. An eine Revolution wie sie in anderen arabischen Ländern, wie Ägypten oder aktuell Syrien statt gefunden hat, ist hier nicht zu denken. Warum auch, den einheimischen Menschen hier geht es sehr gut und auch vielen der Emigranten, die den größten Teil der Bevölkerung ausmachen.</p><p>Dubai ist eine Stadt, die sehr neu wirkt. Kaum einer der Wolkenkratzer ist älter als 10 Jahre. Die Strassen sind in einem sehr guten Zustand und sehr großzügig, dem, bei über 1.000.000 angemeldeten Kraftfahrzeugen (Stand 2010), sehr großen Fahrzeugaufkommen angemessen. Einen großen Teil davon nehmen die Taxis ein. Man steht wirklich nie mehr als 5 Minuten irgendwo, ohne das ein Taxi vorbeikommt. Und Taxi fahren ist wirklich sehr günstig in Dubai. Und wem das immer noch zu teuer ist, der kann auf den öffentlichen Verkehr ausweichen. Das Busnetz und auch die U-Bahn ist sehr gut ausgebaut. Und wenn man befürchtet, beim Warten auf den Bus einen Hitzekoller zu bekommen, fast jede Haltestelle ist mit einem klimatisierten Warteraum ausgestattet. Die U-Bahn selbst wartet auch mit einer Überraschung auf, sie war weltweit die erste, die führerlos ist.</p><p>In Dubai scheint wirklich sehr vieles im Überfluss und auch maßlos zu sein. Wenn ich allein an die Dubai Mall denke, die im Vergleich zu dem Münchner Einkaufszentrum Riem Arkaden mindestens 4 mal größer ist. Dort gibt es wirklich jeden Markenhersteller im eher oberen Preisbereich. Im Verkaufszentrum selbst befindet sich ein Kino (vergleichbar mit dem Münchner Mathäser) und eine große Eislaufbahn, auf der am Vormittag auch das Eishockeyteam (!!!) von Dubai trainiert. Für Kinder gibt es, neben unzähligen Spielegeschäften, auch eine eigene Erlebniswelt in der Eltern ihre Kinder wirklich maßlos verwöhnen können. Und genau das machen viele der Einheimischen auch, sei es beim Spielen, als auch beim Essen, was wir an den vielen übergewichtigen Kindern sehen konnten. Es ist wirklich kaum in Worte zu fassen, auf welche Gegensätze wir bei diesen zwei Urlauben getroffen sind. Auf der anderen Seite sahen wir in Indien Kinder, die morgens nach dem Aufstehen betteln gehen müssen, um wenigstens eine Mahlzeit zu bekommen.</p><p>Wir waren natürlich auch auf “The Palm, Jumeirah”, der einer Palme nachempfundenden künstlich angelegten Insel. Dort waren wir im Atlantis, dem größten Hotel von Dubai, und auch einem der größten Welt. Im Hotel wartete eines der größten Aquarien der Welt auf uns, dass wirklich einen beeindruckenende Einblick in die Unterwasserwelt bot.</p><p>Der Höhepunkt unserer Besuchs in Dubai war allerdings der Ausflug auf den mit 828 m aktuell höchsten Gebäude der Welt, dem Burj Khalifa. Die Aussichtsplattform lag leider nicht ganz oben, aber 452 m sind trotzdem mehr als beeindruckend. Mit dem Fahrstuhl ist man in genau 60 Sekunden oben. Auf der Aussichtsplattform konnte man durch ein spezielles Fernglas in den historischen Modus schalteten war da, wo sich heute ein Wolkenkratzer neben den anderen reiht, nichts als Wüste oder maximal sehr niedrige Wohngebäude der Beduinen befanden. Die Aussicht auf Dubai war wirklich atemberaubend.</p><p>Wir waren nur knapp 3 Tage in Dubai, konnten aber sehr vieles, aber leider nicht alles sehen. So gibt es z.B. in Dubai noch ein natürlich überdachtes Skicenter, an dem wir auch vorbeigefahren sind, aber leider nicht drin waren.<br>Dubai war auf jeden Fall ein Erlebnis, das ich jedem, den die Hitze nicht abschreckt, weiter empfehlen kann.</p><p>Wir haben natürlich auch viele Bilder gemacht. Die besten habe ich wie immer bei Google+ online gestellt. Ihr könnt sie Euch <a href="http://is.gd/fxZrSh" target="_blank" rel="noopener">hier</a> anschauen.</p><p>Wir hoffen, das sie Euch gefallen!</p><p>Ihr Euch könnt Euch noch ein selbst aufgenommenes Video von der Wasserfontänenshow, die jeden Tag direkt vor dem Burj Khalifa aufgeführt wird, bei <a href="http://www.youtube.com/watch?v=o6K5ginQGjA" target="_blank" rel="noopener">Youtube</a> anschauen.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Gleich im Anschluss an unseren Urlaub in Indien machten wir einen Zwischenstop in Dubai, um auch diese Stadt kennenzulernen. Und was soll
      
    
    </summary>
    
      <category term="Urlaub" scheme="https://www.janbaer.de/categories/Urlaub/"/>
    
    
      <category term="urlaub" scheme="https://www.janbaer.de/tags/urlaub/"/>
    
      <category term="reisebericht" scheme="https://www.janbaer.de/tags/reisebericht/"/>
    
      <category term="dubai" scheme="https://www.janbaer.de/tags/dubai/"/>
    
  </entry>
  
  <entry>
    <title>Reisebericht Indien</title>
    <link href="https://www.janbaer.de/2013/10/26/2013-10-26-reisebericht-indien/"/>
    <id>https://www.janbaer.de/2013/10/26/2013-10-26-reisebericht-indien/</id>
    <published>2013-10-25T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>Eigentlich wollte ich von meiner Reise nach Indien einen ausführlichen Reisebericht schreiben und habe das in meinem privaten Tagebuch auch jeden Tag gemacht.</p><p>Da ich aber über die Zustände in Indien sehr enttäuscht und eigentlich auch schockiert war, möchte ich hier nur mein Fazit der Reise ziehen.</p><p>Indien, oder besser Hindustan, ist ein Land mit einer langen Geschichte mit viel Tradition und mit für uns Europäer doch recht ungewöhnlich und teilweise befremdlichen Sitten und Gebräuche. Wenn ich allein an die Rolle und Rechte der Frau in Indien denke, so denke ich, dass wir in Europa deutlich weiter sind. In Indien geht die Schere zwischen Arm und Reich doch deutlich auseinander. Man denkt, das man eine Zeitreise unternimmt, allein wenn man in Dehli zwischen den modernen Stadtvierteln und den recht alten und ärmlich wirkenden Vierteln in Alt-Dehli, aber auch in Neu-Dehli reist. Noch größer ist der Unterschied, wenn man auf das Land kommt. Da fühlt man sich wirklich um 100 Jahre und mehr in der Zeit zurückversetzt. Die hygienischen Bedingungen in Indien auf den Strassen und in den “Wohnungen” der Armen sind wirklich katastrophal. Das schlimmste ist, dass die wenigsten Einheimischen sich dessen überhaupt bewusst sind und deshalb auch nicht im Traum daran denken, dass sich diese Situation ändern muss oder kann.</p><p>Die Tatsache, das in einem eigentlich wohlhabenden Land, wie Indien, in der keine Diktatoren sich bereichern, Kinder morgens, statt in die Schule, betteln gehen müssen, um am Abend nicht mit einem leeren Magen einschlafen zu müssen, hat mich wirklich sehr nachdenklich und traurig gemacht. Als ich einmal drei Kindern je 10 Rupien in die Hand gedrückt habe, standen ein paar Minuten später, gleich drei mal soviel vor dem Bus. Das zeigt, das die Armut eigentlich noch viel Schlimmer ist, als es auf den ersten Blick schon erscheint.</p><p>Ich hatte eigentlich den größten Teil der Reise ein sehr schlechtes Gefühl, weil die Armut und der Schmutz doch die positiven Momente überwog. Ich glaube, ich werde nie den Anblick der wahren Flut an Menschen vergessen, die mehr oder weniger durch den Tag vegetieren und deren Sinn des Lebens darin besteht, irgendwie etwas Geld für Essen zu erbetteln.</p><p>Die Reise nach Indien war für uns sehr interessant, zum großen Teil für uns aber ein eher unangenehmes Erlebnis.</p><p>Wir haben natürlich auch viele Bilder gemacht. Die besten habe ich wie immer bei Google+ online gestellt. Ihr könnt sie Euch <a href="http://is.gd/IS3UWO" target="_blank" rel="noopener">hier</a> anschauen.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Eigentlich wollte ich von meiner Reise nach Indien einen ausführlichen Reisebericht schreiben und habe das in meinem privaten Tagebuch au
      
    
    </summary>
    
      <category term="Urlaub" scheme="https://www.janbaer.de/categories/Urlaub/"/>
    
    
      <category term="urlaub" scheme="https://www.janbaer.de/tags/urlaub/"/>
    
      <category term="reisebericht" scheme="https://www.janbaer.de/tags/reisebericht/"/>
    
      <category term="indien" scheme="https://www.janbaer.de/tags/indien/"/>
    
  </entry>
  
  <entry>
    <title>Using hooks in git</title>
    <link href="https://www.janbaer.de/2013/09/01/2013-09-01-using-hooks-in-git/"/>
    <id>https://www.janbaer.de/2013/09/01/2013-09-01-using-hooks-in-git/</id>
    <published>2013-08-31T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>Wenn man nach “git hooks” sucht, findet man jede Menge Links zu guten Beschreibungen, was es für verschiedene Hooks in Git gibt und was man alles damit machen kann.</p><p>Deshalb möchte ich mich in diesem Artikel darauf beschränken, zu beschreiben, wie ich den <strong>post-commit</strong> hook in einem meiner Projekte verwende.</p><p>Ich habe für mich mit <a href="http://markdoc.org" target="_blank" rel="noopener">MarkDoc</a>ein kleines Wiki erstellt das ich über die Github-Websites über <a href="http://wiki.janbaer.de" target="_blank" rel="noopener">wiki.janbaer.de</a> erreiche. Dieses Wiki wird mit einfachen Textdateien im <strong>Markdown</strong> Format erstellt und über ein <strong>Python</strong> Script in HTML umgewandelt.</p><p>Ich habe jeweils für Text- und HTML-Dateien ein eigenes Git-Repository eingerichet, damit ich die HTML-Dateien über GitHub als Webseiten publishen kann.</p><p>Nun möchte ich, das, sobald ich einen Commit in meinem Source Repository gemacht habe, automatisch die HTML-Dateien erstellt und das Ergebnis dann gleich zu Github gepusht wird.</p><p>Um den Vorgang zu automatisieren, habe ich im Unterordner <strong>.git/hooks</strong> die Datei <strong>post-commit-sample</strong> in <strong>post-commit</strong> umbenannt und mit <strong>chmod</strong> aus ausführbar markiert.</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> .git/hooks</span><br><span class="line">mv <span class="keyword">post</span>-commit-<span class="keyword">sample</span> <span class="keyword">post</span>-commit</span><br><span class="line">chmod +x <span class="keyword">post</span>-commit</span><br><span class="line"><span class="keyword">cd</span> ../..</span><br></pre></td></tr></table></figure><p>In die <strong>post-commit</strong> Datei habe ich jetzt folgende Befehle eingefügt</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">message</span>=$(git log -<span class="number">1</span> HEAD --pretty<span class="symbol">=format</span>:%s)</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push</span></span><br><span class="line"><span class="keyword">markdoc </span><span class="keyword">build</span></span><br><span class="line"><span class="keyword">pushd </span>.</span><br><span class="line"><span class="symbol">cd</span> ~/DropBox/WebSites/wiki</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">add </span>.</span><br><span class="line"><span class="symbol">git</span> commit -m <span class="string">"$message"</span></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push</span></span><br><span class="line"><span class="keyword">popd </span>.</span><br></pre></td></tr></table></figure><p>In der ersten Zeile hole ich mir die Commit-Message aus meinem letzten Commit, damit ich diese an Commit für das zweite Git-Repository verwenden kann. Danach werden zuerst mal meine Änderungen auf Github gepusht. Über <strong>markdoc build</strong> werden die neuen HTML-Dateien erstellt. Danach wechsle ich in das Verzeichnis, in dem sich mein zweites Git-Repository befindet und führe dort die nötigen Git-Befehle aus, um die neuen oder geänderten Dateien zu commiten und zu Github zu pushen.</p><p>Leider gibt es keinen Hook für <strong>pre-push</strong>. Diesen könnte man gut verwenden, um einen lokalen Build mit anschließenden UnitTests durchzuführen. Das möchte ich ungern bei jedem Commit machen.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Wenn man nach “git hooks” sucht, findet man jede Menge Links zu guten Beschreibungen, was es für verschiedene Hooks in Git gibt und was m
      
    
    </summary>
    
      <category term="develop" scheme="https://www.janbaer.de/categories/develop/"/>
    
    
      <category term="git" scheme="https://www.janbaer.de/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Set-acl with Powershell</title>
    <link href="https://www.janbaer.de/2013/04/01/2013-04-01-set-acl-with-powershell/"/>
    <id>https://www.janbaer.de/2013/04/01/2013-04-01-set-acl-with-powershell/</id>
    <published>2013-03-31T22:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>In meinem letzten Projekt war eine meiner Aufgaben, ein Script zu erstellen, das eine definierte Verzeichnisstruktur erstellt und einem bestimmten User die notwendigen Zugriffrechte darauf gibt.<br>Weiterhin sollte das Script dann im IIS eine Website mit einem eigenen AppPool in diesem Verzeichnis erstellen.</p><p>Ich hatte mich entschieden, das Script mit Powershell zu erstellen, da es hier schon fertige Module von Microsoft gibt, um den IIS zu verwalten, ohne das man dies über WMI machen müsste.</p><p>Um dieses Modul allerdings zu verwenden, muss man es in Powershell erst einmal importieren. Das macht man ganz einfach mit foldener Codezeile.</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Import</span>-<span class="keyword">Module</span> -<span class="keyword">Name</span> WebAdministration</span><br></pre></td></tr></table></figure><p>Damit das Module importiert werden kann, muss der IIS mit den Management Services installiert sein. Will man prüfen, ob das Modul auch wirklich installiert ist, so kann man das mit folgendem Code machen und im negativen Fall den Benutzer darauf hinweisen.</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">if </span>((<span class="built_in">get-module</span> -<span class="string">name </span><span class="string">WebAdministration </span>-<span class="string">erroraction </span><span class="string">silentlycontinue)</span> -<span class="string">eq </span>$<span class="string">false)</span> &#123;</span><br><span class="line"><span class="string">Write-Host </span><span class="string">"The Powershell module for WebAdministration is not installed! Please check your IIS installation!"</span> -f <span class="string">Red</span></span><br><span class="line"><span class="string">return</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>Die Website erstellt man dann mit folgendem Code</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$integrated</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">New</span>-WebAppPool -Name <span class="built_in">$appPoolName</span></span><br><span class="line"><span class="keyword">Set</span>-ItemProperty IIS:AppPools\<span class="built_in">$appPoolName</span> managedRuntimeVersion v4.0</span><br><span class="line"><span class="keyword">Set</span>-ItemProperty IIS:AppPools\<span class="built_in">$appPoolName</span> managedPipelineMode <span class="built_in">$integrated</span></span><br><span class="line"><span class="keyword">New</span>-Website -Name <span class="built_in">$webServiceName</span> -PhysicalPath <span class="built_in">$directoryPath</span> -ApplicationPool <span class="built_in">$appPoolName</span></span><br><span class="line">Remove-WebBinding -Name <span class="built_in">$webServiceName</span></span><br><span class="line"><span class="keyword">New</span>-WebBinding -Name <span class="built_in">$webServiceName</span> -IPAddress <span class="string">"*"</span> -Port <span class="built_in">$port</span> -HostHeader <span class="built_in">$webServiceName</span></span><br></pre></td></tr></table></figure><p>Seit IIS7 ist es so, das der AppPool nicht mehr wie früher mit dem Account <strong>NetworkService</strong> läuft sondern es dafür eigene <strong>IIS AppPool</strong> Identities gibt. Wenn man einen neuen AppPool erstellt, läuft dieser unter dem Benutzer <strong>IIS AppPools\AppPoolname</strong>. Es müssen diesem Benutzer noch die Zugriffsrechte auf das Verzeichnis gegeben werden. Normalerweise sollten diesem Benutzer nur auf bestimmte Verzeichniss, wie das Log-Verzeichnis Schreibrechte gegeben werden. Auf die anderen Verzeichniss reichen Lesezugriffsrechte. Auch hierfür hat die Powershell schon die notwendigen Commandlets an Board.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$acl</span> = Get-Acl -Path <span class="variable">$directory</span></span><br><span class="line"><span class="variable">$userAccount</span> = New-Object System<span class="selector-class">.Security</span><span class="selector-class">.Principal</span><span class="selector-class">.NTAccount</span>(<span class="string">"IIS AppPool"</span>, <span class="variable">$userName</span>)</span><br><span class="line"><span class="variable">$permission</span> = <span class="variable">$userAccount</span>, <span class="variable">$right</span>, <span class="string">"ContainerInherit,ObjectInherit"</span>, <span class="string">"None"</span>, <span class="string">"Allow"</span></span><br><span class="line"><span class="variable">$right</span> = New-Object System<span class="selector-class">.Security</span><span class="selector-class">.AccessControl</span><span class="selector-class">.FileSystemAccessRule</span> <span class="variable">$permission</span></span><br><span class="line"><span class="variable">$acl</span>.SetAccessRule(<span class="variable">$right</span>)</span><br><span class="line">Set-Acl -AclObject <span class="variable">$acl</span> -Path <span class="variable">$directory</span></span><br></pre></td></tr></table></figure><p>Die meisten Codebeispiele erstellen die Permission mit der folgenden Codezeile</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$permission = $userAccount, $right</span><br></pre></td></tr></table></figure><p>Das hat aber den Nachteil, das sich diese Berechtigung nicht auf neue Unterordner veerbt. Deswegen ist die erste Variante in den meisten Fällen sicher die zu bevorzugende.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In meinem letzten Projekt war eine meiner Aufgaben, ein Script zu erstellen, das eine definierte Verzeichnisstruktur erstellt und einem b
      
    
    </summary>
    
      <category term="develop" scheme="https://www.janbaer.de/categories/develop/"/>
    
    
      <category term="powershell" scheme="https://www.janbaer.de/tags/powershell/"/>
    
      <category term="iis" scheme="https://www.janbaer.de/tags/iis/"/>
    
      <category term="security" scheme="https://www.janbaer.de/tags/security/"/>
    
  </entry>
  
  <entry>
    <title>LinqPerformanceTips</title>
    <link href="https://www.janbaer.de/2013/03/04/2013-03-04-linqperformancetips/"/>
    <id>https://www.janbaer.de/2013/03/04/2013-03-04-linqperformancetips/</id>
    <published>2013-03-03T23:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>In my latest project I learned some thinks about the performance of Linq when you often query in-memory repositories. Linq is very easy to use and with that you can very quick implement the methods that you need for an repository. But sometimes it’s useful to think a little bit more how often a method will be called. In my latest project I had the situation to call the <strong>GetById</strong> method for more than 20.000 times. And my in-memory repository had more than 700 items. In my first attempt I have used the <strong>SingleOrDefault</strong> method to return the correct item. But this was not fast enough. My function has needed more than 2 seconds in sum. My second attempt was, to convert the items into a Dictionary with the id as key and use this dictionary in the <em>GetById</em> function. And this was so much faster. It needs just 220 ms for all calls and this was the performance that I needed.</p><p>To generate a dictionary very quick, you can use an extension method from the <strong>System.Linq</strong>     namespace. With the following code you can do this very easy</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">items.ToDictionary(<span class="function"><span class="params">i</span> =&gt;</span> i.Id);</span><br></pre></td></tr></table></figure><p>The same experience I made with the query for any items with the same key. The Linq function <strong>SelectMany</strong> was in summary to slow. In this situation you can’t use a dictionary because the key isn’t unique. But Linq has also an Extension method to solve this problem. With the <strong>ToLookup</strong> function you can generate a very fast lookup table.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">items.ToLookup(<span class="function"><span class="params">i</span> =&gt;</span> i.&#123;PropertyToLookup&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In my latest project I learned some thinks about the performance of Linq when you often query in-memory repositories. Linq is very easy t
      
    
    </summary>
    
      <category term="develop" scheme="https://www.janbaer.de/categories/develop/"/>
    
    
      <category term="linq" scheme="https://www.janbaer.de/tags/linq/"/>
    
  </entry>
  
  <entry>
    <title>Csv to Json with Powershell</title>
    <link href="https://www.janbaer.de/2013/02/26/2013-02-26-csvtojsonwithpowershell/"/>
    <id>https://www.janbaer.de/2013/02/26/2013-02-26-csvtojsonwithpowershell/</id>
    <published>2013-02-25T23:00:00.000Z</published>
    <updated>2017-04-01T12:05:18.571Z</updated>
    
    <content type="html"><![CDATA[<p>In my current project I have got some .csf files with the requirement to import these files<br>to my project as base data to use it as inmemory repository.</p><p>The best solution was these single line of code in powershell.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-Content</span> -path <span class="variable">$inputFile</span> | <span class="built_in">ConvertFrom-Csv</span> -Delimiter <span class="string">';'</span> | <span class="built_in">ConvertTo-Json</span> | <span class="built_in">Out-File</span> <span class="variable">$outputFile</span></span><br></pre></td></tr></table></figure><p>You can download the complete powershell script from my <a href="https://gist.github.com/janbaer/5045798" target="_blank" rel="noopener">gist repository</a> at github.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;In my current project I have got some .csf files with the requirement to import these files&lt;br&gt;to my project as base data to use it as in
      
    
    </summary>
    
      <category term="develop" scheme="https://www.janbaer.de/categories/develop/"/>
    
    
      <category term="powershell" scheme="https://www.janbaer.de/tags/powershell/"/>
    
      <category term="csv" scheme="https://www.janbaer.de/tags/csv/"/>
    
      <category term="json" scheme="https://www.janbaer.de/tags/json/"/>
    
  </entry>
  
</feed>
